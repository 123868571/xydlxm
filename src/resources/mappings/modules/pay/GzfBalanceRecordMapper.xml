<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paopao.hzgzf.modules.pay.dao.GzfBalanceRecordMapper" >
  <resultMap id="BaseResultMap" type="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecord" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="account_balance_id" property="accountBalanceId" jdbcType="VARCHAR" />
    <result column="payment_id" property="paymentId" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="balance_type_id" property="balanceTypeId" jdbcType="INTEGER" />
    <result column="oper_type" property="operType" jdbcType="CHAR" />
    <result column="opt_code" property="optCode" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy.id" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="balance" property="balance" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="acct_item_type_id" property="acctItemTypeId" jdbcType="INTEGER" />
    <result column="spe_payment_id" property="spePaymentId" jdbcType="INTEGER" />
    <result column="total_balance" property="totalBalance" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account_balance_id, payment_id, account_id, balance_type_id, oper_type, 
    opt_code, update_by, update_date, amount, balance, remarks,acct_item_type_id,spe_payment_id,total_balance
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gzf_balance_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from gzf_balance_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from gzf_balance_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecordExample" >
    delete from gzf_balance_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecord" >
    insert into gzf_balance_record (id, account_balance_id, payment_id, 
      account_id, balance_type_id, oper_type, 
      opt_code, update_by, update_date, 
      amount, balance, remarks,acct_item_type_id,spe_payment_id,total_balance
      )
    values (#{id,jdbcType=VARCHAR}, #{accountBalanceId,jdbcType=VARCHAR}, #{paymentId,jdbcType=VARCHAR}, 
      #{accountId,jdbcType=VARCHAR}, #{balanceTypeId,jdbcType=INTEGER}, #{operType,jdbcType=CHAR}, 
      #{optCode,jdbcType=VARCHAR}, #{updateBy.id,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{amount,jdbcType=INTEGER}, #{balance,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR},
      #{acctItemTypeId,jdbcType=INTEGER},#{spePaymentId,jdbcType=INTEGER},#{totalBalance,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecord" >
    insert into gzf_balance_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountBalanceId != null" >
        account_balance_id,
      </if>
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="balanceTypeId != null" >
        balance_type_id,
      </if>
      <if test="operType != null" >
        oper_type,
      </if>
      <if test="optCode != null" >
        opt_code,
      </if>
      <if test="updateBy.id != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="acctItemTypeId != null" >
        acct_item_type_id,
      </if>
      <if test="spePaymentId != null" >
        spe_payment_id,
      </if>
      <if test="totalBalance != null" >
        total_balance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="accountBalanceId != null" >
        #{accountBalanceId,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null" >
        #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="balanceTypeId != null" >
        #{balanceTypeId,jdbcType=INTEGER},
      </if>
      <if test="operType != null" >
        #{operType,jdbcType=CHAR},
      </if>
      <if test="optCode != null" >
        #{optCode,jdbcType=VARCHAR},
      </if>
      <if test="updateBy.id != null" >
        #{updateBy.id,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="acctItemTypeId != null" >
        #{acctItemTypeId,jdbcType=INTEGER},
      </if>
      <if test="spePaymentId != null" >
        #{spePaymentId,jdbcType=INTEGER},
      </if>
      <if test="totalBalance != null" >
        #{totalBalance,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecordExample" resultType="java.lang.Integer" >
    select count(*) from gzf_balance_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gzf_balance_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.accountBalanceId != null" >
        account_balance_id = #{record.accountBalanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentId != null" >
        payment_id = #{record.paymentId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.balanceTypeId != null" >
        balance_type_id = #{record.balanceTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.operType != null" >
        oper_type = #{record.operType,jdbcType=CHAR},
      </if>
      <if test="record.optCode != null" >
        opt_code = #{record.optCode,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy.id != null" >
        update_by = #{record.updateBy.id,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.acctItemTypeId != null" >
        acct_item_type_id = #{record.acctItemTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.spePaymentId != null" >
        spe_payment_id = #{record.spePaymentId,jdbcType=INTEGER},
      </if>
      <if test="record.totalBalance != null" >
        total_balance = #{record.totalBalance,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gzf_balance_record
    set id = #{record.id,jdbcType=VARCHAR},
      account_balance_id = #{record.accountBalanceId,jdbcType=VARCHAR},
      spe_payment_id = #{record.spePaymentId,jdbcType=INTEGER},
      payment_id = #{record.paymentId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      balance_type_id = #{record.balanceTypeId,jdbcType=INTEGER},
      oper_type = #{record.operType,jdbcType=CHAR},
      opt_code = #{record.optCode,jdbcType=VARCHAR},
      update_by = #{record.updateBy.id,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      amount = #{record.amount,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      acct_item_type_id = #{record.acctItemTypeId,jdbcType=INTEGER},
      total_balance = #{record.totalBalance,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecord" >
    update gzf_balance_record
    <set >
      <if test="accountBalanceId != null" >
        account_balance_id = #{accountBalanceId,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null" >
        payment_id = #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="balanceTypeId != null" >
        balance_type_id = #{balanceTypeId,jdbcType=INTEGER},
      </if>
      <if test="operType != null" >
        oper_type = #{operType,jdbcType=CHAR},
      </if>
      <if test="optCode != null" >
        opt_code = #{optCode,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null and updateBy.id != null" >
        update_by = #{updateBy.id,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="acctItemTypeId != null" >
        acct_item_type_id = #{acctItemTypeId,jdbcType=INTEGER},
      </if>
      <if test="spePaymentId != null" >
        spe_payment_id = #{spePaymentId,jdbcType=INTEGER},
      </if>
      <if test="totalBalance != null" >
        total_balance = #{totalBalance,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecord" >
    update gzf_balance_record
    set account_balance_id = #{accountBalanceId,jdbcType=VARCHAR},
      payment_id = #{paymentId,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      spe_payment_id = #{spePaymentId,jdbcType=INTEGER},
      balance_type_id = #{balanceTypeId,jdbcType=INTEGER},
      oper_type = #{operType,jdbcType=CHAR},
      opt_code = #{optCode,jdbcType=VARCHAR},
      update_by = #{updateBy.id,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=INTEGER},
      balance = #{balance,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      acct_item_type_id = #{acctItemTypeId,jdbcType=INTEGER},
      total_balance = #{totalBalance,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
    <select id="get" resultType="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecord">
		SELECT 
			<include refid="Base_Column_List" />
		FROM gzf_balance_record a
		WHERE a.id = #{id}
	</select>
	
	<sql id="Where">
		<where>
			 <if test="accountId != null and accountId != ''" >
		        	and account_id = #{accountId,jdbcType=VARCHAR}
		     </if>
		      <if test="spePaymentId != null and spePaymentId !=0 " >
		        	and spe_payment_id = #{spePaymentId,jdbcType=INTEGER}
		      </if>
		     <if test="acctItemTypeId != null and acctItemTypeId > 0" >
		        	and acct_item_type_id = #{acctItemTypeId,jdbcType=INTEGER}
		      </if>
		      <if test="optCode != null and optCode != ''" >
		        	and opt_code = #{optCode,jdbcType=VARCHAR}
		      </if>
		      <if test="operType != null and operType != ''" >
		        	and oper_type = #{operType,jdbcType=CHAR}
		      </if>
		      <if test="beginTime != null and beginTime != ''">
	  			  <![CDATA[ and update_date >= #{beginTime} ]]>
  			  </if>
	  		  <if test="endTime != null and endTime != ''">
	  			 <![CDATA[ and update_date <= #{endTime} ]]>
	  		  </if>
		</where>
	</sql>
	
	<select id="findList" resultType="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecord">
		SELECT 
			<include refid="Base_Column_List" />
		FROM gzf_balance_record a
		<include refid="Where"></include>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.inc_id DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.paopao.hzgzf.modules.pay.entity.GzfBalanceRecord">
		SELECT 
			<include refid="Base_Column_List" />
		FROM gzf_balance_record a
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.inc_id DESC
			</otherwise>
		</choose>
	</select>
	
	<update id="delete">
		delete from  gzf_balance_record
		WHERE id = #{id}
	</update>
</mapper>