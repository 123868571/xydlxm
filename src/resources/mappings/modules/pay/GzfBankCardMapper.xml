<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paopao.hzgzf.modules.pay.dao.GzfBankCardMapper" >
  <resultMap id="BaseResultMap" type="com.paopao.hzgzf.modules.pay.entity.GzfBankCard" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="bank_id" property="bankId" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="acct_item_type_id" property="acctItemTypeId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy.id" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy.id" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account_id, bank_id, bank_name, card_no, acct_item_type_id, create_date, create_by, 
    remarks, update_date, update_by, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBankCardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gzf_bank_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from gzf_bank_card
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from gzf_bank_card
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBankCardExample" >
    delete from gzf_bank_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBankCard" >
    insert into gzf_bank_card (id, account_id, bank_id, 
      bank_name, card_no, acct_item_type_id, 
      create_date, create_by, remarks, 
      update_date, update_by, del_flag
      )
    values (#{id,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, #{bankId,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, #{acctItemTypeId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createBy.id,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updateBy.id,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBankCard" >
    insert into gzf_bank_card
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="cardNo != null" >
        card_no,
      </if>
      <if test="acctItemTypeId != null" >
        acct_item_type_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createBy.id != null" >
        create_by,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updateBy.id != null" >
        update_by,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null" >
        #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="acctItemTypeId != null" >
        #{acctItemTypeId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy.id != null" >
        #{createBy.id,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy.id != null" >
        #{updateBy.id,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBankCardExample" resultType="java.lang.Integer" >
    select count(*) from gzf_bank_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gzf_bank_card
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.bankId != null" >
        bank_id = #{record.bankId,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null" >
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.acctItemTypeId != null" >
        acct_item_type_id = #{record.acctItemTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy.id != null" >
        create_by = #{record.createBy.id,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy.id != null" >
        update_by = #{record.updateBy.id,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gzf_bank_card
    set id = #{record.id,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      bank_id = #{record.bankId,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      acct_item_type_id = #{record.acctItemTypeId,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_by = #{record.createBy.id,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy.id,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBankCard" >
    update gzf_bank_card
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null" >
        bank_id = #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="acctItemTypeId != null" >
        acct_item_type_id = #{acctItemTypeId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null and createBy.id != null" >
        create_by = #{createBy.id,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null and updateBy.id != null" >
        update_by = #{updateBy.id,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBankCard" >
    update gzf_bank_card
    set account_id = #{accountId,jdbcType=VARCHAR},
      bank_id = #{bankId,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      acct_item_type_id = #{acctItemTypeId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy.id,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy.id,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <sql id="accountJoin">
  	left join gzf_account p on p.id = a.account_id
  </sql>
  
  <sql id="Where">
  	<if test="gzfAccount !=null and gzfAccount.phoneNo != null">
  		and p.phone_no = #{gzfAccount.phoneNo}
  	</if>
  	<if test="gzfAccount != null and gzfAccount.name != null">
  		and p.name = #{gzfAccount.name}
  	</if>
  </sql>
  
  <sql id="accountColumns">
  	 p.id as gzfAccount.id, p.account_name as gzfAccount.accountName, p.cust_id as gzfAccount.custId, p.phone_no as gzfAccount.phoneNo  
  </sql>
  
  <select id="get" resultType="com.paopao.hzgzf.modules.pay.entity.GzfBankCard">
		SELECT 
			<include refid="Base_Column_List" />,<include refid="accountColumns"></include>
		FROM gzf_bank_card a
			<include refid="accountJoin"></include>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.paopao.hzgzf.modules.pay.entity.GzfBankCard">
		SELECT 
			<include refid="Base_Column_List" /><!-- ,<include refid="accountColumns"></include> -->
		FROM gzf_bank_card a
		<!-- <include refid="accountJoin"></include> -->
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="accountId != null and accountId != ''">
				and a.account_id = #{accountId} 
			</if>
			<if test="bankId != null and bankId != ''">
				and a.bank_id = #{bankId} 
			</if>
			<if test="cardNo != null and cardNo != ''">
				and a.card_no = #{cardNo} 
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.paopao.hzgzf.modules.pay.entity.GzfBankCard">
		SELECT 
			<include refid="Base_Column_List" />
		FROM gzf_bank_card a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<update id="delete">
		UPDATE gzf_bank_card SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<update id="deleteByAccountAndCardNo">
		UPDATE gzf_bank_card SET 
			del_flag = #{DEL_FLAG_DELETE}
		<where>
			del_flag = #{DEL_FLAG_NORMAL}
			<if test="accountId != null and accountId != ''">
				and account_id = #{accountId} 
			</if>
			<if test="bankId != null and bankId != ''">
				and bank_id = #{bankId} 
			</if>
			<if test="cardNo != null and cardNo != ''">
				and card_no = #{cardNo} 
			</if>
			<if test="acctItemTypeId != null and acctItemTypeId != ''">
				and acct_item_type_id = #{acctItemTypeId} 
			</if>
		</where>
	</update>
</mapper>