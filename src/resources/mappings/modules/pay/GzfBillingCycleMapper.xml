<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paopao.hzgzf.modules.pay.dao.GzfBillingCycleMapper" >
  <resultMap id="BaseResultMap" type="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycle" >
    <id column="biiling_cycle_id" property="biilingCycleId" jdbcType="INTEGER" />
    <result column="begin_date" property="beginDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="last_billing_cycle_id" property="lastBillingCycleId" jdbcType="INTEGER" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
    <result column="state_date" property="stateDate" jdbcType="TIMESTAMP" />
    <result column="next_billing_cycle_id" property="nextBillingCycleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    biiling_cycle_id, begin_date, end_date, last_billing_cycle_id, del_flag, state_date, 
    next_billing_cycle_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gzf_billing_cycle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from gzf_billing_cycle
    where biiling_cycle_id = #{biilingCycleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from gzf_billing_cycle
    where biiling_cycle_id = #{biilingCycleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycleExample" >
    delete from gzf_billing_cycle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycle" >
    insert into gzf_billing_cycle (biiling_cycle_id, begin_date, end_date, 
      last_billing_cycle_id, del_flag, state_date, 
      next_billing_cycle_id)
    values (#{biilingCycleId,jdbcType=INTEGER}, #{beginDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, 
      #{lastBillingCycleId,jdbcType=INTEGER}, #{delFlag,jdbcType=CHAR}, #{stateDate,jdbcType=TIMESTAMP}, 
      #{nextBillingCycleId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycle" >
    insert into gzf_billing_cycle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="biilingCycleId != null" >
        biiling_cycle_id,
      </if>
      <if test="beginDate != null" >
        begin_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="lastBillingCycleId != null" >
        last_billing_cycle_id,
      </if>
      <if test="delFlag != null" >
        delFlag,
      </if>
      <if test="stateDate != null" >
        state_date,
      </if>
      <if test="nextBillingCycleId != null" >
        next_billing_cycle_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="biilingCycleId != null" >
        #{biilingCycleId,jdbcType=INTEGER},
      </if>
      <if test="beginDate != null" >
        #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastBillingCycleId != null" >
        #{lastBillingCycleId,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="stateDate != null" >
        #{stateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="nextBillingCycleId != null" >
        #{nextBillingCycleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycleExample" resultType="java.lang.Integer" >
    select count(*) from gzf_billing_cycle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gzf_billing_cycle
    <set >
      <if test="record.biilingCycleId != null" >
        biiling_cycle_id = #{record.biilingCycleId,jdbcType=INTEGER},
      </if>
      <if test="record.beginDate != null" >
        begin_date = #{record.beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastBillingCycleId != null" >
        last_billing_cycle_id = #{record.lastBillingCycleId,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
      <if test="record.stateDate != null" >
        state_date = #{record.stateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nextBillingCycleId != null" >
        next_billing_cycle_id = #{record.nextBillingCycleId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gzf_billing_cycle
    set biiling_cycle_id = #{record.biilingCycleId,jdbcType=INTEGER},
      begin_date = #{record.beginDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      last_billing_cycle_id = #{record.lastBillingCycleId,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=CHAR},
      state_date = #{record.stateDate,jdbcType=TIMESTAMP},
      next_billing_cycle_id = #{record.nextBillingCycleId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycle" >
    update gzf_billing_cycle
    <set >
      <if test="beginDate != null" >
        begin_date = #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastBillingCycleId != null" >
        last_billing_cycle_id = #{lastBillingCycleId,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="stateDate != null" >
        state_date = #{stateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="nextBillingCycleId != null" >
        next_billing_cycle_id = #{nextBillingCycleId,jdbcType=INTEGER},
      </if>
    </set>
    where biiling_cycle_id = #{biilingCycleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycle" >
    update gzf_billing_cycle
    set begin_date = #{beginDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      last_billing_cycle_id = #{lastBillingCycleId,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=CHAR},
      state_date = #{stateDate,jdbcType=TIMESTAMP},
      next_billing_cycle_id = #{nextBillingCycleId,jdbcType=INTEGER}
    where biiling_cycle_id = #{biilingCycleId,jdbcType=INTEGER}
  </update>
  
  <select id="get" resultType="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycle">
		SELECT 
			<include refid="Base_Column_List" />
		FROM gzf_billing_cycle a
		WHERE a.biiling_cycle_id = #{biiling_cycle_id}
	</select>
	
	<select id="findList" resultType="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycle">
		SELECT 
			<include refid="Base_Column_List" />
		FROM gzf_billing_cycle a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.paopao.hzgzf.modules.pay.entity.GzfBillingCycle">
		SELECT 
			<include refid="Base_Column_List" />
		FROM gzf_billing_cycle a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<update id="delete">
		UPDATE gzf_billing_cycle SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE biiling_cycle_id = #{biiling_cycle_id}
	</update>
</mapper>